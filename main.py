import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram import F
from aiogram.enums import ParseMode

BOT_TOKEN = '6969343979:AAHWyix4smbWl_kwje_m7PE_3k-tmtdBvPc'
logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–æ–º –ø–æ —á–∞—Ç–∞–º
previous_messages = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
async def delete_previous_bot_message(chat_id):
    if chat_id in previous_messages and 'bot' in previous_messages[chat_id]:
        try:
            await bot.delete_message(chat_id=chat_id, message_id=previous_messages[chat_id]['bot'])
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞: {e}")

async def on_startup(dp):
    logging.warning('Bot has been started, press Ctrl+C to stop')
    print("Bot has been started")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    kb = [
        [types.KeyboardButton(text='–ó–∞–≤—Ç—Ä–∞–∫')],
        [types.KeyboardButton(text='–û–±–µ–¥')],
        [types.KeyboardButton(text='–£–∂–∏–Ω')],
        [types.KeyboardButton(text='–ü–µ—Ä–µ–∫—É—Å')]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª'
    )
    await message.answer(
        f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π {message.from_user.full_name}\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–±–æ—Ä–Ω–∏–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ üìù\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º —Ä–∞–∑–¥–µ–ª —Ä–µ—Ü–µ–ø—Ç–æ–≤ üëÄ',
        reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤ —Ä–µ—Ü–µ–ø—Ç–æ–≤
@dp.message(F.text.lower() == '–∑–∞–≤—Ç—Ä–∞–∫')
async def r_breakfast(message: types.Message):
    await delete_previous_bot_message(message.chat.id)  # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    sent_message = await message.answer("[–ó–∞–≤—Ç—Ä–∞–∫ ü•û](https://telegra.ph/Testovyj-recept-02-19)", parse_mode=ParseMode.MARKDOWN_V2)
    previous_messages[message.chat.id] = {'bot': sent_message.message_id}  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞


@dp.message(F.text.lower() == '–æ–±–µ–¥')
async def r_lunch(message: types.Message):
    await delete_previous_bot_message(message.chat.id)
    sent_message = await message.answer("[–û–±–µ–¥](https://telegra.ph/Stranica-s-receptami-na-obed-02-22)", parse_mode=ParseMode.MARKDOWN_V2)
    previous_messages[message.chat.id] = {'bot': sent_message.message_id}


@dp.message(F.text.lower() == '—É–∂–∏–Ω')
async def r_dinner(message: types.Message):
    await delete_previous_bot_message(message.chat.id)
    sent_message = await message.answer("[–£–∂–∏–Ω](https://telegra.ph/Uzhin-02-22)", parse_mode=ParseMode.MARKDOWN_V2)
    previous_messages[message.chat.id] = {'bot': sent_message.message_id}

@dp.message(F.text.lower() == '–ø–µ—Ä–µ–∫—É—Å')
async def r_snack(message: types.Message):
    await delete_previous_bot_message(message.chat.id)
    sent_message = await message.answer("[–ü–µ—Ä–µ–∫—É—Å](https://telegra.ph/Perekus-02-22)", parse_mode=ParseMode.MARKDOWN_V2)
    previous_messages[message.chat.id] = {'bot': sent_message.message_id}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /offer
@dp.message(Command('offer'))
async def cmd_offer(message: types.Message):
    await delete_previous_bot_message(message.chat.id)
    sent_message = await message.answer('–î–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ *@Glymm*',
                                       parse_mode=ParseMode.MARKDOWN_V2)
    previous_messages[message.chat.id] = {'bot': sent_message.message_id}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())

